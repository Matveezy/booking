version: "3.9"
services:

  common:
    build:
      context: .
      args:
        service: common
    container_name: common
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - HOST=db
      - PORT=${PG_PORT}
      - NAME=${POSTGRES_DB}
      - USER=${POSTGRES_USER}
      - PASS=${POSTGRES_PASSWORD}

  user:
    build:
      context: .
      args:
        service: user
    container_name: user
    ports:
      - "8080:8081"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - HOST=db
      - PORT=${PG_PORT}
      - NAME=${POSTGRES_DB}
      - USER=${POSTGRES_USER}
      - PASS=${POSTGRES_PASSWORD}

  owner:
    build:
      context: .
      args:
        service: owner
    container_name: owner
    ports:
      - "8080:8082"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - HOST=db
      - PORT=${PG_PORT}
      - NAME=${POSTGRES_DB}
      - USER=${POSTGRES_USER}
      - PASS=${POSTGRES_PASSWORD}

  admin:
    build:
      context: .
      args:
        service: admin
    container_name: admin
    ports:
      - "8080:8083"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - HOST=db
      - PORT=${PG_PORT}
      - NAME=${POSTGRES_DB}
      - USER=${POSTGRES_USER}
      - PASS=${POSTGRES_PASSWORD}

  config:
    build:
      context: .
      args:
        service: config
    container_name: config
    ports:
      - "8080:8084"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - HOST=db
      - PORT=${PG_PORT}
      - NAME=${POSTGRES_DB}
      - USER=${POSTGRES_USER}
      - PASS=${POSTGRES_PASSWORD}

  alerts:
    build:
      context: .
      args:
        service: alerts
    container_name: alerts
    ports:
      - "8080:8085"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - HOST=db
      - PORT=${PG_PORT}
      - NAME=${POSTGRES_DB}
      - USER=${POSTGRES_USER}
      - PASS=${POSTGRES_PASSWORD}

  files:
    build:
      context: .
      args:
        service: files
    container_name: files
    ports:
      - "8080:8086"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - HOST=db
      - PORT=${PG_PORT}
      - NAME=${POSTGRES_DB}
      - USER=${POSTGRES_USER}
      - PASS=${POSTGRES_PASSWORD}

  db:
    image: postgres:14
    container_name: db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=${PGDATA}
    volumes:
      - .:/var/lib/postgresql/data
    ports:
      - ${PG_PORT}:${PG_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      timeout: 1s
      retries: 10
    restart: unless-stopped